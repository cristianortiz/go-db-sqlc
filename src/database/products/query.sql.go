// Code generated by sqlc. DO NOT EDIT.
// source: query.sql

package products

import (
	"context"
	"database/sql"
)

const createNewProduct = `-- name: CreateNewProduct :execresult
INSERT INTO products (
  title,description,image,price
) VALUES (
  ?, ?, ?, ?
)
`

type CreateNewProductParams struct {
	Title       string
	Description string
	Image       string
	Price       float64
}

func (q *Queries) CreateNewProduct(ctx context.Context, arg CreateNewProductParams) (sql.Result, error) {
	return q.db.ExecContext(ctx, createNewProduct,
		arg.Title,
		arg.Description,
		arg.Image,
		arg.Price,
	)
}

const getAllProducts = `-- name: GetAllProducts :many
 SELECT id, title, description, image, price FROM products
 ORDER BY title ASC
`

func (q *Queries) GetAllProducts(ctx context.Context) ([]Product, error) {
	rows, err := q.db.QueryContext(ctx, getAllProducts)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Product
	for rows.Next() {
		var i Product
		if err := rows.Scan(
			&i.ID,
			&i.Title,
			&i.Description,
			&i.Image,
			&i.Price,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
